%dev.quarkus.http.port=8081

# Configure the outgoing `quotes` Kafka topic
mp.messaging.outgoing.quotes.apicurio.registry.auto-register=true
mp.messaging.outgoing.quotes.apicurio.registry.find-latest=true
mp.messaging.outgoing.quotes.apicurio.registry.artifact-resolver-strategy=io.apicurio.registry.serde.avro.strategy.TopicRecordIdStrategy
mp.messaging.outgoing.quotes.apicurio.registry.avro-datum-provider=io.apicurio.registry.serde.avro.ReflectAvroDatumProvider
mp.messaging.outgoing.quotes.connector=smallrye-kafka
mp.messaging.outgoing.quotes.value.serializer=io.apicurio.registry.serde.avro.AvroKafkaSerializer
mp.messaging.outgoing.quotes.key.serializer=org.apache.kafka.common.serialization.StringSerializer

%prod.mp.messaging.outgoing.quotes.apicurio.auth.realm=${OAUTH_REALM:rhoas}
%prod.mp.messaging.outgoing.quotes.apicurio.auth.service.url=${OAUTH_SERVER_URL:https://identity.api.openshift.com/auth}
%prod.mp.messaging.outgoing.quotes.apicurio.auth.client.id=${CLIENT_ID}
%prod.mp.messaging.outgoing.quotes.apicurio.auth.client.secret=${CLIENT_SECRET}

mp.messaging.connector.smallrye-kafka.apicurio.registry.url=${REGISTRY_URL}
%test.quarkus.apicurio-registry.devservices.port=8888


##Kafka servers and auth configuration

%prod.kafka.bootstrap.servers=${BOOTSTRAP_SERVER}
%prod.kafka.security.protocol=SASL_SSL

%prod.kafka.sasl.mechanism=OAUTHBEARER
%prod.kafka.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
  oauth.client.id="${CLIENT_ID}" \
  oauth.client.secret="${CLIENT_SECRET}" \
  oauth.token.endpoint.uri="${OAUTH_TOKEN_ENDPOINT_URI}" ;
%prod.kafka.sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler